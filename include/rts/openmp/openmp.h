#pragma once

#include "traits.h"

namespace MOGSLib { namespace RTS {

/**
 *  @class OpenMP
 *  @brief Abstraction of the OpenMP runtime system functionalities, types and API.
 */
template<typename Traits = DefaultRuntimeTraits<MOGSLib::RuntimeSystemEnum::OpenMP>>
struct OpenMP {

  /// @brief Index type is defined by the Traits parameter.
  using Index = typename Traits::Index;
  /// @brief Load type is defined by the Traits parameter.
  using Load = typename Traits::Load;

  static Index chunks;
  static Index pus;

  /**
   *  @brief Set the amount of chunks generated by the OpenMP runtime.
   *  @param nchunks The amount of chunks.
   *
   *  This method is designed to be called from within the OpenMP runtime.
   */
  static inline void nchunks(decltype(chunk_size) nchunks) { chunks = nchunks; }

  /**
   *  @brief Set the amount of threads generated by the OpenMP runtime.
   *  @param nthreads The amount of running threads managed by OpenMP.
   *
   *  This method is designed to be called from within the OpenMP runtime.
   */
  static inline void nthreads(decltype(nPEs) nthreads) { pus = nthreads; }
};

}}