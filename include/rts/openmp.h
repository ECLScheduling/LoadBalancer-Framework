#pragma once

#include <abstractions/rts.h>
#include <system/type_definitions.h>
#include <iostream>

namespace MOGSLib { namespace Abstraction {

/**
 * @brief The declaration of a specific data structure to represent the OpenMP runtime system.
 * @details This structure must contain solely static data in order to be acessed globally by Binders, Initializers, Concepts and Adaptors.
 */
template<>
struct RTS<MOGSLib::RuntimeSystemEnum::OpenMP> : RTS<MOGSLib::RuntimeSystemEnum::OpenMP, false> {
  using Index = MOGSLib::Index;

  static Index chunk_size;
  static Index nPEs;
  static Index ntasks;

  /**
   * @brief Define the amount of chunks that are generated by OpenMP.
   * @param nchunks The amount of chunks that are generated by OpenMP.
   */
  static inline void set_chunk_size(decltype(chunk_size) nchunks) { chunk_size = nchunks; }

  /**
   * @brief Define the amount of PEs perceived by the OpenMP runtime.
   * @param _nPEs The amount of PEs detected by OpenMP.
   */
  static inline void set_nPEs(decltype(nPEs) _nPEs) { nPEs = _nPEs; }

  /**
   * @brief Define the amount of tasks perceived by the OpenMP runtime.
   * @param _ntasks The amount of tasks detected by OpenMP.
   */
  static inline void set_ntasks(decltype(ntasks) _ntasks) { ntasks = _ntasks; }

};

}}